{
  "286573a0-10ca-11ec-94ab-65785263a1f0": {
    "en": {
      "generic": {
        "blocks": [
          {
            "id": "286573a0-10ca-11ec-94ab-65785263a1f0",
            "component_type": "start_block",
            "nodeName": "StartBlock",
            "metadata": [
              {
                "item_key": "Default",
                "item_value": "Welcome"
              }
            ]
          }
        ]
      }
    }
  },
  "286574e0-10ca-11ec-ad71-f541555fe19c": {
    "en": {
      "generic": {
        "blocks": [
          {
            "component_type": "text",
            "nodeName": "Welcome",
            "context": [],
            "text": "Hi! Welcome to DFINITY.",
            "audio_file": "",
            "ssml": "",
            "delay": 500,
            "reprompt": [],
            "metadata": [
              {
                "item_key": "Default",
                "item_value": "AskQuestion"
              }
            ],
            "end_conversation": false,
            "buttons": [],
            "id": "286574e0-10ca-11ec-ad71-f541555fe19c"
          }
        ]
      }
    }
  },
  "28657580-10ca-11ec-a7a0-e79d60a99dd7": {
    "en": {
      "generic": {
        "blocks": [
          {
            "component_type": "text",
            "nodeName": "AskQuestion",
            "context": [],
            "text": "Ask me a question and I'll find the answer for you.  Example: What is the Internet Computer?\n",
            "audio_file": "",
            "ssml": "",
            "delay": 500,
            "reprompt": [],
            "metadata": [
              {
                "item_key": "Intent-canister",
                "item_value": "canister"
              },
              {
                "item_key": "Intent-canister_status",
                "item_value": "canisterstatus"
              },
              {
                "item_key": "Intent-cycles",
                "item_value": "cycles"
              },
              {
                "item_key": "Intent-deploy",
                "item_value": "deploy"
              },
              {
                "item_key": "Intent-device",
                "item_value": "device"
              },
              {
                "item_key": "Intent-dfinity",
                "item_value": "What is DFINITY?"
              },
              {
                "item_key": "Intent-hardware",
                "item_value": "hardware"
              },
              {
                "item_key": "Intent-internet_computer",
                "item_value": "internetcomputer"
              },
              {
                "item_key": "Intent-motoko",
                "item_value": "motoko"
              },
              {
                "item_key": "Intent-network_nervous_system",
                "item_value": "networknervoussystem"
              },
              {
                "item_key": "Intent-neuron",
                "item_value": "neuron"
              },
              {
                "item_key": "Intent-node",
                "item_value": "node"
              },
              {
                "item_key": "Intent-security_key",
                "item_value": "securitykey"
              },
              {
                "item_key": "Intent-smart_contract",
                "item_value": "smart_contract"
              },
              {
                "item_key": "Intent-software_development_kit",
                "item_value": "softwaredevelopmentkit"
              },
              {
                "item_key": "Intent-token",
                "item_value": "token"
              }
            ],
            "end_conversation": false,
            "buttons": [],
            "id": "28657580-10ca-11ec-a7a0-e79d60a99dd7"
          }
        ]
      }
    }
  },
  "28657600-10ca-11ec-8405-ad9c70e8e582": {
    "en": {
      "generic": {
        "blocks": [
          {
            "component_type": "button",
            "nodeName": "What is DFINITY?",
            "context": [],
            "text": "Here are some articles that might help.",
            "buttons": [
              {
                "type": "postback",
                "title": "What is the DFINITY Foundation?",
                "payload": "<p>The&nbsp;<a title=\"The DFINITY Foundation\" href=\"https://dfinity.org/foundation/\" target=\"_blank\">DFINITY Foundation</a>&nbsp;is a not-for-profit scientific research organization based in Zurich, Switzerland, that oversees research centers in Palo Alto, San Francisco, and Zurich, as well as teams in Japan, Germany, the UK, and across the United States. The Foundation’s mission is to build, promote, and maintain the Internet Computer. Its accomplished team — which includes many of the world’s top cryptographers and distributed systems and programming language experts, with nearly 100,000 academic citations and 200 patents collectively — is committed to building advanced experimental technologies to improve the public internet.</p>"
              },
              {
                "type": "postback",
                "title": "Who is the founder of the DFINITY Foundation and Internet Computer project?",
                "payload": "<p>Dominic Williams is the Founder, President, and Chief Scientist of the DFINITY Foundation and Internet Computer project. He hails from the UK but moved to Palo Alto, California, in 2012, and continues to travel among the various operations DFINITY maintains around the globe. He has a background as a technology entrepreneur, distributed systems engineer, and theoretician. His last major venture was an MMO game that grew to millions of users, which ran on a novel horizontally scalable game server technology he created.</p>"
              },
              {
                "type": "postback",
                "title": "DFINITY developer grant program terms and conditions",
                "payload": "<p>DFINITY DEVELOPER GRANT PROGRAM TERMS AND CONDITIONS DFINITY Foundation and its affiliates (collectively, the “Foundation”) offers the DFINITY Developer Grant Program (the “Grant Program”) inviting Participants to build services, infrastructure, and tooling to grow the Internet Computer network and ecosystem. These Terms and Conditions (the “Terms”) apply to your participation in the Grant Program, and in addition to any other Grant Program terms, describes the Grant Program’s requirements as well as the benefits that you may receive as a participant in the Grant Program. While all Project Proposals (defined below) submitted by you (as an applicant or after acceptance into the Grant Program by the Foundation) will be reviewed by the Foundation, your creation or release of a Project (defined below) or your engagement in any other Grant Program related activities, do not obligate the Foundation to provide you with Rewards (defined below) or any other Grant Program benefits. YOUR PARTICIPATION IN THE GRANT PROGRAM IS ENTIRELY VOLUNTARY, BUT IF YOU ARE PARTICIPATING IN THE PROGRAM, YOU MUST STRICTLY ADHERE TO THESE TERMS. IF, AS PART OF YOUR VOLUNTARY PARTICIPATION, YOU MEET THE CRITERIA LISTED BELOW, YOU MAY RECEIVE CERTAIN AMOUNTS OF TOKEN OR CASH (“INCENTIVES”). YOU AGREE THAT ANY INCENTIVES RECEIVED BY YOU WILL BE FOR YOUR SERVICES IN TESTING THE FOUNDATION’S TECHNOLOGIES AS DEFINED BELOW AND AS PART OF THIS GRANT PROGRAM.</p>"
              }
            ],
            "audio_file": "",
            "ssml": "",
            "delay": 500,
            "reprompt": [],
            "metadata": [
              {
                "item_key": "Default",
                "item_value": "quickreplies"
              }
            ],
            "nextMessagesIds": [],
            "id": "28657600-10ca-11ec-8405-ad9c70e8e582"
          }
        ]
      }
    }
  },
  "28657670-10ca-11ec-ad4d-2bee2d6d0241": {
    "en": {
      "generic": {
        "blocks": [
          {
            "component_type": "jump",
            "nodeName": "JumpBlock1",
            "selectedResult": {
              "value": "28657580-10ca-11ec-a7a0-e79d60a99dd7",
              "label": "AskQuestion",
              "jumpType": "node"
            },
            "reprompt": [],
            "metadata": [
              {
                "item_key": "Default",
                "item_value": "AskQuestion"
              }
            ],
            "selectedProject": "",
            "id": "28657670-10ca-11ec-ad4d-2bee2d6d0241"
          }
        ]
      }
    }
  },
  "286576d0-10ca-11ec-aa60-c9cebe1797c6": {
    "en": {
      "generic": {
        "blocks": [
          {
            "component_type": "button",
            "nodeName": "internetcomputer",
            "context": [],
            "text": "Here are some articles that might help.",
            "buttons": [
              {
                "type": "postback",
                "title": "What is the Internet Computer?",
                "payload": "<p>The Internet Computer extends the functionality of the public internet so that it can host back-end software, transforming it into a global compute platform.</p><p>Using the Internet Computer, developers can create websites, enterprise IT systems, and internet systems by installing their code directly on the public internet and dispense with server computers and commercial cloud systems.</p><p>Enabling systems to be directly built onto the Internet is undoubtedly innovative, but the Internet Computer is about more than this alone. It seeks to address serious longstanding problems that bedevil IT, including system security, and to provide a means to reverse and undo the ever increasing monopolization of internet systems, user relationships, and data, and restore the Internet to its permissionless, innovative, and creative roots.</p><p>For example, the Internet Computer hosts its native software within an unstoppable tamperproof environment, making it possible to create systems that don’t depend on firewalls, backup systems, and failover for their security. This framework also makes interoperability between different systems as simple as a function call, and automatically persists memory, removing the need for traditional files, enabling organizations to dispense with standalone infrastructure such as database servers. These features enable internet software systems to be completely self contained and address today’s security challenges while dramatically reducing the exorbitant complexity and cost of IT.</p><p>The increasing monopolization of internet systems is addressed through support for “autonomous software”, which runs without an owner. This allows “open” versions of mainstream internet systems to be created, such as social media websites or SaaS business systems, that run as part of the fabric of the Internet itself. These new open systems can provide users with far superior guarantees about how their data is processed, and moreover can share their user data and functionality with other internet systems using permanent APIs that can never be revoked, eliminating “platform risk” and allowing for dynamic and collaborative extension of the ecosystem in a way that generates mutualized network effects that enable them to compete with Big Tech monopolies, providing tremendous new opportunities to entrepreneurs and investors.</p><p>The Internet Computer is formed by an advanced blockchain protocol called ICP (Internet Computer Protocol) that independent data centers around the world run to combine the power of individual computers into an unstoppable seamless universe where internet native software is hosted and run with the same security guarantees as smart contracts. It is integrated with Internet standards such as DNS, and can server user experiences directly to web browsers and smartphones.</p>"
              },
              {
                "type": "postback",
                "title": "How is the Internet Computer created?",
                "payload": "<p>The Internet Computer is formed by an advanced blockchain protocol called ICP (Internet Computer Protocol) that independent data centers around the world run to combine the power of individual computers into an unstoppable, seamless universe where internet native software is hosted and run with the same security guarantees as <a href=\"https://dfinity.org/faq/canisters\" target=\"_blank\">Canister smart contracts</a>. It is integrated with Internet standards such as DNS, and can server user experiences directly to web browsers and smartphones.</p><p>To participate in the open network that creates the Internet Computer, a data center must first get a DCID (Data Center Identity). This is obtained through an algorithmic governance system that is part of the Internet Computer itself, called the Network Nervous System, which plays a roughly analogous role to ICANN (a not-for-profit organization that helps govern the Internet) but has broader functionality and drives many aspects of network management. Once a data center has obtained a DCID, it can make node machines, which are essentially server computers with a standardized specification, available to the network. When the Internet Computer needs more capacity, the Network Nervous System inducts these machines, forming them into “subnetworks” that can host software canisters. Special software running on node machines interacts with other nodes using ICP and applies advanced computer science to allow their compute capacity to be securely added to the Internet Computer.</p><p>Data centers receive remuneration in the form of tokens, which are also used by <a href=\"https://dfinity.org/faq/canisters\" target=\"_blank\">Canisters smart contracts</a> to create <a title=\"Cycles\" href=\"https://dfinity.org/faq/cycles\" target=\"_blank\">cycles</a>&nbsp;that powers computation and storage, in moderated amounts such that approximately constant returns are received per node over time. Participation in the&nbsp;<a title=\"Network Nervous System\" href=\"https://dfinity.org/faq/network-nervous-system-(nns)\" target=\"_blank\">Network Nervous System</a>&nbsp;algorithmic governance system is possible by locking tokens to create “<a title=\"Neuron\" href=\"https://dfinity.org/faq/neuron\" target=\"_blank\">neurons</a>,” which provides those voting with voting rewards and enable automatic voting in the form of liquid democracy style scheme. ICP has been designed so that the Internet Computer is managed in an open way and can grow without bound so that it may eventually incorporate millions of node machines.</p>"
              },
              {
                "type": "postback",
                "title": "How does the Internet Computer make the public internet better?",
                "payload": "<p>The Internet Computer makes the world better by providing solutions to the critical problems facing tech today. Many of these critical problems arise from issues with the current structure of the public internet. Here are some key ways the Internet Computer it makes the public internet better:</p><p><strong>Ending The Captive Customer Trap</strong></p><p>The Internet Computer makes it possible to build websites, enterprise systems and internet services by uploading software into a seamless open universe where it runs securely and can easily interact with users and other software. By contrast, builders using the legacy IT stack must roll their own platforms by selecting from a multitude of commercial cloud services, cloud tools, proprietary and open source variations of operating systems, components such as databases and firewalls, virtualization technologies, software development platforms and more. The resulting complexity, the highly custom nature of the systems assembled, the special developer knowledge needed to maintain them, and the associated vendor relationships, makes it expensive and difficult to migrate and adapt legacy systems as needs change. The effect is compounded by legacy stack vendors strategizing to create captive customers, for example by encouraging dependence on custom features and using restrictive licensing. In the future, developers building on the Internet Computer will marvel how anything used to get built at all, and jealously guard their freedom.</p><p><strong>Powering Systems That Are Secure By Default</strong></p><p>Using the legacy stack it is almost impossible to build and maintain systems that are truly secure. Once systems have been built to provide desired functionality, additional hardening work must performed to make them safe, which involves protecting them from the outside world using firewalls, and careful configuration and administration of their components. A single mistake by just one member of the IT team, a malicious insider, or a failure to apply software updates in time, can result in hackers jumping firewalls and creating havoc. Consequently, the legacy stack is behind a rolling global meltdown in security, with ever increasing hacks, data thefts, and incidents where entire infrastructures cease to function after ransomware encrypts server machines. By contrast, the Internet Computer provides a tamperproof environment where unstoppable software runs that does not depend on firewalls and hardening for security, in which installed software systems are secure by default and run with the same security guarantees provided to smart contracts. In the future, when systems get hacked or experience downtime, people will fairly ask, “why didn’t they build on the Internet Computer?”.</p><p><strong>Fixing Debilitating IT Complexity, Costs and Delays</strong></p><p>The legacy stack is always evolving, but the problem of overarching complexity in IT isn’t going away, and some would say is worsening. Complexity drives costs, slows down system development, and of course, is a contributing factor in security woes that cost yet more money to mitigate. Today, 85% of IT costs at a typical Fortune 500 company reside with IT Operations (i.e. people), who often have to spend more than 90% of their time dealing with system complexity that is unrelated to the functionality they are trying to provide, such as configuring infrastructure components so they will talk to each other. Solving for complexity can deliver huge dividends by reducing costs and time to market. The Internet Computer has dramatically reimagined software in a way that addresses the challenge. For example, when developers write code that describes data (such as the profile of a person, say), that data is securely automatically persisted within the memory pages hosting their software, removing the need for the developer to marshal it in and out of databases or even think much about how persistence works at all (the feature is called “orthogonal persistence”). Without need for legacy components such as databases, and working using reimagined software, Internet Computer developers focus on coding up “what” they want to achieve, rather than traditional complexities of “how” systems are constructed and interoperate, driving incredible efficiencies.</p><p><strong>Powering “Open Internet Services” And Ending Big Tech Monopolies</strong></p><p>The primary aim of technology companies has always been to establish monopolistic positions, which then allow vast profits to be generated. Originally the strategy was pursued by operating system vendors, such as Microsoft, but it also became the goal for internet platforms and services. This has been seen with everything from online auctions sites, through social gaming, apartment rentals, ride sharing, email, search, online advertising, cloud services, SaaS business systems, social networks and much more. Venture capitalists fund entrepreneurial startups they believe can execute well and capture enough user relationships and data that they can create compounding network effects that makes competition almost impossible within their respective fields, but in recent years the system is coming undone. The challenge is that the largest players in Big Tech have hijacked sufficient user relationships that creating new internet services is becoming more and more difficult, and consolidation is making the situation worse as the largest monopolies buy up the smaller monopolies.</p><p>The problem arises from the way the internet services share their user relationships, data and functionality via APIs on the Programmable Web. In recent years, many opportunities involve building on the APIs provided by Big Tech. For example, Zynga became the largest social games company primarily by publishing via Facebook, but one day Facebook changed the rules and within 3 months 85% of Zynga’s $15 billion value had been lost. More recently, LinkedIn had been allowing thousands of startups to query its database of professional profiles and incorporate them into their own services, but when it was purchased by Microsoft it revoked API access for all but a few fellow Big Tech players, such as Salesforce, causing widespread damage. These are examples of “platform risk” at play, and for example in 2019 when Mark Zuckerburg, the CEO of Facebook, rejected a meeting request from the CEO of Tinder, the world’s biggest dating service, he said “I don’t think he’s that relevant. He probably just wants to make sure we won’t turn off their API”. This kind of thing has become the norm and even the smaller tech monopolies are worried.</p><p>Nowadays, most venture capitalists will not invest in startups creating services that depend on the APIs of Big Tech, even if they are otherwise exciting propositions, greatly limiting opportunity, competition and innovation, which will harm all of us. The Internet Computer addresses this by providing technology that supports the creation of a new kind of “open internet service” that runs as part of the fabric of the Internet without an owner. These can provide better guarantees to users about how their data is processed, but an equally important superpower is that they can create “permanent” APIs that they can guarantee will never be revoked or degraded (because they cannot, whatever they decide). Thus, for example, an open equivalent to LinkedIn might be created that provides an API that other internet services can use without risk to incorporate professional profiles it hosts, laying the foundations for powerful “mutualized network effects\" that can help it out-compete the monopolistic LinkedIn: since it can guarantee the availability of the API it shares in perpetuity, thousands of new services can safely build on top and extend its functionality, driving the value of its core services and the professional profiles it hosts, while also encouraging the other services to forward to new users and apply open LinkedIn as their own user repository. A key purpose of the Internet Computer is to power the reengineering of key Internet services in open form, in a way that completely reverses the monopolistic incentive to hijacking data, driving the formation of a far more dynamic, collaborative, richer and ultimately more successful internet ecosystem.</p>"
              },
              {
                "type": "postback",
                "title": "Who will use the Internet Computer?",
                "payload": "<p>If you are an entrepreneur, developer, or enterprise looking for better ways to build software, the Internet Computer presents an unprecedented, unfolding opportunity. All of this will accelerate because the Internet Computer is expanding the functionality of the public internet — from a global network to also becoming a public compute platform.</p><p>Many will use the Internet Computer to reduce complexity when building websites and enterprise systems without the need for legacy technologies such as cloud systems, databases, and firewalls. Entrepreneurs and developers will take advantage of the emerging “open internet boom” to create pan-industry platforms, DeFi apps, and dapps by building reimaged software directly on the public internet.</p><p>Through the use of <a title=\"Canisters\" href=\"https://dfinity.org/faq/canisters\" target=\"_blank\">Canister smart contracts</a>, users can simply deploy code, store data, and process computation through the Internet Computer Protocol (ICP). The Internet Computer is infinitely scalable as well as decentralized, allowing for applications to exist on the Internet in perpetuity. This enables users to build and deploy dapps that can “<em>run on the network itself rather than on servers owned by Facebook, Google or Amazon.</em>” -<a title=\"The Most Read Article of 2020 on the MIT Technology Review\" href=\"https://www.technologyreview.com/2020/07/01/1004725/redesign-internet-apps-no-one-controls-data-privacy-innovation-cloud\" target=\"_blank\">MIT Technology Review</a></p>"
              }
            ],
            "audio_file": "",
            "ssml": "",
            "delay": 500,
            "reprompt": [],
            "metadata": [
              {
                "item_key": "Default",
                "item_value": "quickreplies"
              }
            ],
            "nextMessagesIds": [],
            "id": "286576d0-10ca-11ec-aa60-c9cebe1797c6"
          }
        ]
      }
    }
  },
  "28657730-10ca-11ec-9ce4-43f469423365": {
    "en": {
      "generic": {
        "blocks": [
          {
            "component_type": "button",
            "nodeName": "node",
            "context": [],
            "text": "Here are some articles that may help:",
            "buttons": [
              {
                "type": "postback",
                "title": "How do I host nodes for the Internet Computer?",
                "payload": "<span>For inquiries regarding the Node Provider program, please <a href=\"https://support.internetcomputer.org/hc/en-us/requests/new\" target=\"_blank\">submit a ticket</a> on the Internet Computer Association’s website under “Prospective Node Providers.\"</span>"
              },
              {
                "type": "postback",
                "title": "How is a node deployed to the Internet Computer?",
                "payload": "<p>Nodes for the Internet Computer are currently deployed through independent data centers located across the world that combine their computing power by running the Internet Computer Protocol.</p><p>Unlike projects like Bitcoin or Ethereum where a machine of any caliber can run a “node,” the Internet Computer has a minimum standard of technical specifications for each machine to ensure higher speeds, lower latency, and greater reliability. Additionally, unlike proprietary cloud and compute systems that are run by an individual organization, the Internet Computer is decentralized and governed by the&nbsp;<a title=\"Network Nervous System\" href=\"https://dfinity.org/faq/network-nervous-system-(nns)\" target=\"_blank\">Network Nervous System</a>&nbsp;(NNS).</p><p>In order to deploy a node to the Internet Computer, the node machine must meet a minimum set of specifications to ensure a minimum level of computational efficiency across the Internet Computer. As the NNS scales the Internet Computer’s capacity, more and more decentralized nodes running the Internet Computer Protocol will continue to be added, allowing capacity to scale infinitely through&nbsp;<a title=\"Subnet\" href=\"https://dfinity.org/faq/subnet\" target=\"_blank\">subnets</a>.</p>"
              },
              {
                "type": "postback",
                "title": "What kind of proposals can I vote on?",
                "payload": "<p><span>Some of the initial topics available in the NNS to vote on include:</span></p><ul><li><strong>#ExchangeRate</strong>:<span> Proposals provide information in “real time” about the market value of ICP utility tokens, as measured by an International Monetary Fund (IMF) Special Drawing Right (SDR), which allows the NNS to convert ICP utility tokens to cycles (which power computation) at a rate that keeps their real-world cost constant. Because proposals on this topic are very frequent, they have a shorter voting period, and votes on this topic are not included in the voting history of the neuron.</span><span><br><br></span></li><li><strong>#Governance</strong>:<span> Proposals that administer governance — for example, motions and the configuration of certain parameters.</span><span><br><br></span></li><li><strong>#KYC</strong>: <span>Proposals that update KYC information for regulatory purposes.</span><span><br><br></span></li><li><strong>#NetworkCanisterManagement</strong>:<span> Installing and upgrading “system” Canister smart contracts that belong to the network — for example, upgrading the NNS.</span><span><br><br></span></li><li><strong>#NetworkEconomics</strong>:<span> Proposals that administer network economics — for example, the minimal neuron stake</span><span><br><br></span></li><li><strong>#NeuronManagement</strong>:<span> A special topic by means of which a neuron can be managed by the followees for this topic (in this case, there is no fallback to default). Votes on this topic are not included in the voting history of the neuron. For proposals on this topic, only followees on this topic, of the neuron that the proposals pertains to, are allowed to vote. Because the set of eligible voters of proposals on this topic is restricted, proposals on this topic have a shorter than normal voting period.</span><span><br><br></span></li><li><strong>#NodeAdmin</strong>:<span> Proposals that administer node machines, including but not limited to upgrading or configuring the OS, upgrading or configuring the virtual machine framework, and upgrading or configuring the node replica software.</span><span><br><br></span></li><li><strong>#NodeProviderRewards</strong>:<span> Proposals relating to node provider rewards.</span><span><br><br></span></li><li><strong>#ParticipantManagement</strong>:<span> Proposals that administer network participants — for example, granting and revoking DCIDs (data center identities) or NPIDs (node provider identities).</span></li></ul><p>&nbsp;</p><ul><li><strong>#SubnetManagement</strong>:<span> Proposals that administer network subnets — for example, creating new subnets, adding and removing subnet nodes, and splitting subnets.</span></li></ul>"
              }
            ],
            "audio_file": "",
            "ssml": "",
            "delay": 500,
            "reprompt": [],
            "metadata": [
              {
                "item_key": "Default",
                "item_value": "quickreplies"
              }
            ],
            "workflow_index": 6,
            "nextMessagesIds": [],
            "id": "28657730-10ca-11ec-9ce4-43f469423365"
          }
        ]
      }
    }
  },
  "28657790-10ca-11ec-be36-e948ade42a67": {
    "en": {
      "generic": {
        "blocks": [
          {
            "component_type": "button",
            "nodeName": "deploy",
            "context": [],
            "text": "Here are some articles that may help:",
            "buttons": [
              {
                "type": "postback",
                "title": "How do I upgrade an application previously deployed on the Internet Computer? How do I reinstall or re-deploy a Canister smart contract?",
                "payload": "<p><span>To upgrade a Canister smart contract on the Internet Computer network:<br></span></p><ol><li><span>Open a new terminal and navigate to your project directory.</span></li><li><span>Start the Internet Computer network, if necessary.<br><br>In most cases, this step is only necessary if you are running the Internet Computer network locally.<br><br>If you were upgrading Canisters on a remote network, you would include the --network command-line option to perform tasks on that network.<br></span></li><li><span>Verify you have Canister identifiers for all of the Canisters you want to upgrade.<br><br>Note that your program must identify the variables for which to maintain state by using the stable keyword in the variable declaration.<br><br>For more information about declaring stable variables, see the Motoko Programming Language Guide.</span></li><li><span>Upgrade all of the Canisters by running the following command:<br><br>dfx Canister install --all --mode upgrade</span></li></ol><p><span><br><br>Similar steps are involved to reinstall on the Internet Computer network:<br></span></p><ol><li><span>Open a new terminal and navigate to your project directory.</span></li><li><span>Start the Internet Computer network, if necessary.<br><br>In most cases, this step is only necessary if you are running the Internet Computer network locally.<br><br>If you were reinstalling Canisters on a remote network, you would include the --network command-line option to perform tasks on that network.</span></li><li><span>Verify you have Canister identifiers for all of the Canisters you want to re-deploy.</span></li><li><span>Re-deploy all of the Canisters by running the following command:<br><br>dfx canister install --all --mode reinstall<br></span></li></ol><p><span><br>To view in-depth information about upgrading and reinstalling Canisters, please check out the <a href=\"https://sdk.dfinity.org/docs/developers-guide/working-with-canisters.html#upgrade-canister\" target=\"_blank\">helpful articles from the Developer Center</a>.<br></span></p>"
              },
              {
                "type": "postback",
                "title": "How do I install applications on the Internet Computer? How do I install or deploy a Canister smart contract?",
                "payload": "<p><span>You can make applications accessible on the Internet Computer network by deploying the Canister smart contract that make up the application project.</span></p><p>&nbsp;</p><div><p>To deploy on the Internet Computer network for the first time:</p><p>&nbsp;</p></div><div><ol><li><p>Open a new terminal and navigate to your project directory.</p></li><li><p>Start the Internet Computer network, if necessary.</p><div><p>In most cases, this step is only necessary if you are running the Internet Computer network locally.</p></div><div><p>If you were installing Canisters on a remote network, you would include the --network&nbsp;command-line option to perform tasks on that network.</p><p>&nbsp;</p></div></li><li><p>Verify you have Canister identifiers for all of the Canisters you want to deploy.</p></li><li><p>Deploy all of the Canisters by running the following command:</p><div><div><pre>dfx canister install --all</pre></div></div></li></ol></div><p>&nbsp;</p><p><span>To view in-depth information about working with Canisters, please check out these helpful articles from the Developer Center:</span></p><ul><li><a href=\"https://sdk.dfinity.org/docs/developers-guide/working-with-canisters.html#deploy-canister\" target=\"_blank\">Deploy Canisters on the Internet Computer network</a></li></ul><p>&nbsp;</p><p><span>Related topics (reinstalling canisters and upgrading Canisters):</span></p><ul><li><a href=\"https://sdk.dfinity.org/docs/developers-guide/working-with-canisters.html#reinstall-canister\" target=\"_blank\">Reinstall a Canister</a></li><li><a href=\"https://sdk.dfinity.org/docs/developers-guide/working-with-canisters.html#upgrade-canister\" target=\"_blank\">Upgrade a Canister</a></li></ul>"
              },
              {
                "type": "postback",
                "title": "How do you deploy software to the Internet Computer?",
                "payload": "<p>When you write source code for an application that runs on the Internet Computer, you compile the source code into a WebAssembly module. To deploy the WebAssembly module that contains your program on the Internet Computer, the program is executed inside of a conceptual computational unit called a Canister smart contract. Once deployed, end users can interact with the Canister by accessing the entry point functions you have defined for that <a title=\"Canisters\" href=\"https://dfinity.org/faq/canisters\" target=\"_blank\">Canister</a>&nbsp;through a front-end client such as a browser.</p>"
              }
            ],
            "audio_file": "",
            "ssml": "",
            "delay": 500,
            "reprompt": [],
            "metadata": [
              {
                "item_key": "Default",
                "item_value": "quickreplies"
              }
            ],
            "nextMessagesIds": [],
            "id": "28657790-10ca-11ec-be36-e948ade42a67"
          }
        ]
      }
    }
  },
  "286577f0-10ca-11ec-b211-c519a16534c5": {
    "en": {
      "generic": {
        "blocks": [
          {
            "component_type": "button",
            "nodeName": "softwaredevelopmentkit",
            "context": [],
            "text": "Here are some articles that may help:",
            "buttons": [
              {
                "type": "postback",
                "title": "How do you deploy software to the Internet Computer?",
                "payload": "<p>When you write source code for an application that runs on the Internet Computer, you compile the source code into a WebAssembly module. To deploy the WebAssembly module that contains your program on the Internet Computer, the program is executed inside of a conceptual computational unit called a Canister smart contract. Once deployed, end users can interact with the Canister by accessing the entry point functions you have defined for that <a title=\"Canisters\" href=\"https://dfinity.org/faq/canisters\" target=\"_blank\">Canister</a>&nbsp;through a front-end client such as a browser.</p>"
              },
              {
                "type": "postback",
                "title": "Where can I find the Software Development Kit?",
                "payload": "<p><span>If you’re interested in developing on the Internet Computer, check out our resources, tutorials, and troubleshooting guides within the Software Development Kit on our <a href=\"https://dfinity.org/developers/\" target=\"_blank\">Developers page</a>.</span></p>"
              },
              {
                "type": "postback",
                "title": "Can users deploy private software on the Internet Computer?",
                "payload": "<p>The Internet Computer supports both open <a title=\"Canisters\" href=\"https://dfinity.org/faq/canisters\" target=\"_blank\">Canister smart contracts</a> and private Canisters, which enable the owners of the Canisters to make their technology open or private. Private Canisters will necessitate greater amounts of cycles to maintain than open Canisters.</p>"
              }
            ],
            "audio_file": "",
            "ssml": "",
            "delay": 500,
            "reprompt": [],
            "metadata": [
              {
                "item_key": "Default",
                "item_value": "quickreplies"
              }
            ],
            "nextMessagesIds": [],
            "id": "286577f0-10ca-11ec-b211-c519a16534c5"
          }
        ]
      }
    }
  },
  "28657850-10ca-11ec-8b08-6d6f74e12358": {
    "en": {
      "generic": {
        "blocks": [
          {
            "component_type": "quick_replies",
            "nodeName": "quickreplies",
            "context": [],
            "text": "Did the article you viewed help to answer your question?",
            "quick_replies": [
              {
                "content_type": "text",
                "title": "Yes",
                "image_url": "",
                "payload": "That's great!  Glad we could help."
              },
              {
                "content_type": "text",
                "title": "No",
                "image_url": "",
                "payload": "Sorry to hear that.  We will try to sort this out."
              }
            ],
            "audio_file": "",
            "ssml": "",
            "delay": 2000,
            "reprompt": [],
            "metadata": [
              {
                "item_key": "Response-Yes",
                "item_value": "GladToHelp"
              },
              {
                "item_key": "Response-No",
                "item_value": "SorryToHear"
              }
            ],
            "id": "28657850-10ca-11ec-8b08-6d6f74e12358"
          }
        ]
      }
    }
  },
  "286578b0-10ca-11ec-806d-e9f3391622da": {
    "en": {
      "generic": {
        "blocks": [
          {
            "component_type": "button",
            "nodeName": "motoko",
            "context": [],
            "text": "Here are some articles that may help:",
            "buttons": [
              {
                "type": "postback",
                "title": "Motoko",
                "payload": "<p><strong>What is Motoko?</strong></p><p>Motoko is a new software language being developed by the DFINITY Foundation, with an accompanying SDK, that is designed to help the broadest possible audience of developers create reliable and maintainable websites, enterprise systems, and internet services on the Internet Computer with ease. By developing the Motoko language, the DFINITY Foundation will ensure that a language that is highly optimized for the new environment is available.</p><p>The Internet Computer can support any number of different software frameworks, and the DFINITY Foundation is also working on SDKs that support the Rust and C languages. Eventually, it is expected there will be many different SDKs that target the Internet Computer.</p><p>The Motoko Canister SDK can be found on the <a title=\"Motoko Canister SDK\" href=\"https://sdk.dfinity.org/docs/language-guide/motoko.html\" target=\"_blank\">Developer Center.</a></p>"
              },
              {
                "type": "postback",
                "title": "Why does Motoko compile to WebAssembly?",
                "payload": "<p>Motoko compiles to WebAssembly (Wasm) due to its versatility to operate across the internet. The Internet Computer leverages Wasm <a title=\"Canisters\" href=\"https://dfinity.org/faq/canisters\" target=\"_blank\">Canister smart contracts</a>&nbsp;to store data and execute code directly to the internet. Wasm is a binary instruction format for a stack-based virtual machine. It is designed as a portable compilation target for programming languages, enabling deployment on the web for client and server applications.</p><p>The Wasm stack machine is designed to be encoded in a size-and-load time efficient binary format. Wasm aims to execute at native speed by taking advantage of common hardware capabilities available on a wide range of platforms. Wasm describes a memory-safe, sandboxed execution environment that may even be implemented inside existing JavaScript virtual machines. When embedded in the web, Wasm will enforce the same-origin and permissions security policies of the browser.</p><p>Wasm is designed to maintain the versionless, feature-tested, and backwards-compatible nature of the web. Wasm modules will be able to call into and out of the JavaScript context and access browser functionality through the same web APIs accessible from JavaScript. Wasm also supports non-web embeddings. Source:&nbsp;<a title=\"WebAssembly.org\" href=\"https://webassembly.org/\" target=\"_blank\">WebAssembly.org</a>.</p><p>For these reasons as well as its compatibility across browsers, Motoko compiles down to Wasm. Additionally, any language that can compile down to Wasm can then be deployed on the Internet Computer.</p>"
              },
              {
                "type": "postback",
                "title": "What tools does DFINITY provide for developers?",
                "payload": "<p>The&nbsp;<a title=\"DFINTIY SDK Documentation\" href=\"https://sdk.dfinity.org/docs/index.html\" target=\"_blank\">DFINITY SDK Documentation</a>&nbsp;is the main resource for all developer needs.</p><p>The DFINITY Foundation is continuously building tools to&nbsp;<a title=\"Developer Experience (DX) and the Internet Computer\" href=\"https://medium.com/dfinity/developer-experience-dx-and-the-internet-computer-1700c13fab9e\" target=\"_blank\">support developers and improve their experience</a>&nbsp;in deploying technology to the Internet Computer.</p><p>The&nbsp;<a title=\"DFINITY Canister SDK\" href=\"https://sdk.dfinity.org/docs/download.html?utm_source=medium&amp;utm_campaign=dx\" target=\"_blank\">DFINITY Canister SDK</a>&nbsp;is a software development kit that developers can use to create applications for the Internet Computer.</p><p>The&nbsp;<a title=\"Rust CDK\" href=\"https://github.com/dfinity/cdk-rs\" target=\"_blank\">Rust CDK</a> is a Canister smart contract development kit that developers can use to program software for the Internet Computer in Rust.</p><p>The&nbsp;<a title=\"Vessel Package Manager\" href=\"https://github.com/kritzcreek/vessel\" target=\"_blank\">Vessel Package Manager</a>&nbsp;is a simple package manager for the Motoko programming language.</p><p>The&nbsp;<a title=\"Motoko VS Code Extension\" href=\"https://marketplace.visualstudio.com/items?itemName=dfinity-foundation.vscode-motoko\" target=\"_blank\">Motoko VS Code Extension</a>&nbsp;is Syntax highlighting for the Motoko programming language in VS Code.</p>"
              }
            ],
            "audio_file": "",
            "ssml": "",
            "delay": 500,
            "reprompt": [],
            "metadata": [
              {
                "item_key": "Default",
                "item_value": "quickreplies"
              }
            ],
            "nextMessagesIds": [],
            "id": "286578b0-10ca-11ec-806d-e9f3391622da"
          }
        ]
      }
    }
  },
  "28657900-10ca-11ec-af9b-dd19a23b7f96": {
    "en": {
      "generic": {
        "blocks": [
          {
            "component_type": "button",
            "nodeName": "securitykey",
            "context": [],
            "text": "Here are some articles that may help:",
            "buttons": [
              {
                "type": "postback",
                "title": "What is a physical security key? How does a physical security key work?",
                "payload": "<p>A Security Key is a hardware authentication device used to protect access to computers, networks, and online services that supports one-time passwords, public-key cryptography, and authentication.</p><p>&nbsp;</p><p>Typically, you insert the security key into your device (or wirelessly connect it) and press a button on the key itself. The security key will then be presented with a challenge by your web browser or app. It will cryptographically sign this challenge, verifying your identity and whatever it is you're trying to access.</p><p>&nbsp;</p><p>You can use a physical security key to authenticate into almost any application or service,&nbsp;<span>but you should use a dedicated one for the Internet Identity and authorize as many other devices as possible</span><span>.&nbsp;</span>Ideally, you’ll want to purchase a security key that supports Fido U2F and can communicate with both your phone and your computer.</p>"
              },
              {
                "type": "postback",
                "title": "I’ve lost my security key and did not add additional devices to my Internet Identity, what can I do?",
                "payload": "<span>Unfortunately, if you’ve lost your security key and did not set up Account Recovery (an additional security key or a seed phrase), you will be locked out.</span>"
              },
              {
                "type": "postback",
                "title": "I’ve lost my security key but added an additional security key to my Internet Identity, how can I log in?",
                "payload": "<span>Please visit <a href=\"http://identity.ic0.app/\" target=\"_blank\">identity.ic0.app</a> directly and follow the \"Lost access and want to recover?\" prompt. Please note, if you use a security key as a recovery device, <span>you still need to remember your identity anchor</span>.</span>"
              }
            ],
            "audio_file": "",
            "ssml": "",
            "delay": 500,
            "reprompt": [],
            "metadata": [
              {
                "item_key": "Default",
                "item_value": "quickreplies"
              }
            ],
            "nextMessagesIds": [],
            "id": "28657900-10ca-11ec-af9b-dd19a23b7f96"
          }
        ]
      }
    }
  },
  "28657960-10ca-11ec-ac8c-d369e2ae3639": {
    "en": {
      "generic": {
        "blocks": [
          {
            "component_type": "button",
            "nodeName": "device",
            "context": [],
            "text": "Here are some articles that may help:",
            "buttons": [
              {
                "type": "postback",
                "title": "How do I add more devices to my Internet Identity?",
                "payload": "<p><strong><span>***Do not clear your browser history or website data after setting up your Internet Identity &amp; NNS.&nbsp;We strongly advise users to set up multiple devices.***</span></strong></p><p>&nbsp;</p><p>The workflow for adding a device can vary depending on what devices you’ve already added to your identity. For example, if you first authorized your computer to create your identity anchor, and you’d like to add your phone as a second authentication method, you must be able to authenticate your phone on the authorized computer. You must always be able to authorize the device you want to add by using a device that is already authorized.</p><p>&nbsp;</p>"
              },
              {
                "type": "postback",
                "title": "What if I lose my phone, can I still use my Internet Identity?",
                "payload": "<h2><strong><span>***Do not clear your browser history or website data after setting up your Internet Identity &amp; NNS. We strongly advise users to set up multiple devices.***</span></strong></h2><p>&nbsp;</p><p><span>If you have your Internet Identity tied to only one device and you lose that one device, you would be locked out. Hence, as a best practice, we always recommend that you <a title=\"Internet Identity Guide\" href=\"https://sdk.dfinity.org/docs/ic-identity-guide/auth-how-to.html\" target=\"_blank\">add multiple devices to your Internet Identity</a>.</span></p>"
              },
              {
                "type": "postback",
                "title": "How do I know if my device supports Internet Identity?",
                "payload": "<p><span><strong>***Do not clear your browser history or website data after setting up your Internet Identity &amp; NNS.&nbsp;We strongly advise users to set up multiple devices.***</strong></span></p><p>&nbsp;</p><p><span>The <a href=\"https://dfinity.org/faq/internet-identity\" target=\"_blank\">Internet Identity</a> takes advantage of the Web Authentication (WebAuthn) API to provide secure cryptographic authentication. While WebAuthn is supported by several of the most popular browsers, it is not supported by all. If you have any issues, we recommend you do the following:<br><br>1. Check if your browser <a href=\"https://caniuse.com/?search=webauthn\" target=\"_blank\">supports WebAuthn</a>.<br>2. If your browser is supported, you may have encountered a bug. Please let us know by <a href=\"https://support.dfinity.org/hc/en-us/requests/new\" target=\"_blank\">submitting a ticket</a> to help us resolve the issue.<br><br>To see a walkthrough of Internet Identity, watch our <a href=\"https://www.youtube.com/watch?v=oxEr8UzGeBo\" target=\"_blank\">demo</a>.</span></p>"
              }
            ],
            "audio_file": "",
            "ssml": "",
            "delay": 500,
            "reprompt": [],
            "metadata": [
              {
                "item_key": "Default",
                "item_value": "quickreplies"
              }
            ],
            "nextMessagesIds": [],
            "id": "28657960-10ca-11ec-ac8c-d369e2ae3639"
          }
        ]
      }
    }
  },
  "286579c0-10ca-11ec-bb63-b1c8b566508d": {
    "en": {
      "generic": {
        "blocks": [
          {
            "component_type": "button",
            "nodeName": "hardware",
            "context": [],
            "text": "Here are some articles that may help:",
            "buttons": [
              {
                "type": "postback",
                "title": "What hardware is acceptable to use for users who opt for self-custody?",
                "payload": "<p>At this time, hardware wallets are not supported for self-custody.</p>"
              },
              {
                "type": "postback",
                "title": "Why do I need a special / late-model hardware to use Internet Identity?",
                "payload": "<span>Currently, Webauthn is not supported. Therefore, Windows computers require the use of a security key that supports Fido U2F to use the Internet Identity. DFINITY does not sell these keys.<br><br>The Firefox browser will only accept a security key for both authentication and for device/browser authorization.<br><br>Non-Windows users do not need to have a device with biometrics to use the Internet Identity. There should be an option to use the computer screen unlock passcode and/or phone screen unlock pin. The screen unlock feature must be active on the device for that option to be available.</span>"
              },
              {
                "type": "postback",
                "title": "What is self-custody?",
                "payload": "<p><span>Self-custody is a means of holding your digital assets by which only you have access to them. This means that you choose not to use a third party, and instead will manage your private key personally. There are different kinds of self-custody solutions that vary in their security and ease of use, so we recommend that you spend some time learning about the various options that are available before making a decision about how you wish to proceed. You can learn more about cold storage and other key concepts by checking out the associated links in this document, but we highly recommend that you research these subjects yourself thoroughly before proceeding.</span></p><p>&nbsp;</p><p><span>Cold Storage:</span></p><p><span>Cold storage means that you are keeping private keys stored offline in a device that is not connected to the internet. Cold storage is a popular solution for self-custody because it increases the complexity of being hacked, and requires that your cold storage mechanism be physically compromised.</span></p><p><span> Additional resources:</span></p><ul><li><a href=\"https://www.investopedia.com/terms/c/cold-storage.asp\" target=\"_blank\">Investopedia - Cold Storage</a></li><li><a href=\"https://www.ledger.com/academy/hardwarewallet/best-practices-when-using-a-hardware-wallet#:~:text=%E2%80%93%20Keep%20your%20Recovery%20sheet%20physically,or%20smartphone%20screen%20with%20caution\" target=\"_blank\">Ledger - Best Practices when using a Hardware Wallet</a></li><li><a href=\"https://blog.trailofbits.com/2018/11/27/10-rules-for-the-secure-use-of-cryptocurrency-hardware-wallets/\" target=\"_blank\">Trail of Bits - 10 Rules for the Secure Use of Cryptocurrency Hardware Wallets</a></li></ul><p><span>Some examples of cold storage include:</span><span><br></span></p><ul><li><strong>Hard wallets</strong><span>: A hard wallet is a physical device that holds your digital assets. Private keys are stored in a secure part of the device that does not come into contact with the Internet. This reduces the risks that are associated with devices connected to the Internet, but it also means that if you lose access to your hard wallet you will be unable to access your cryptocurrency. However, hard wallets are typically seeded with a secret seed phase that can be backed up in the form of a paper wallet (see below). In case of loss of the device you can then initialize a new device with the backed up seed and regain access to your digital assets.</span></li><ul><li><a href=\"https://cointelegraph.com/explained/crypto-wallets-explained\" target=\"_blank\">CoinTelegraph - Crypto Wallets, Explained</a></li></ul><li><strong>Air gapped computers</strong><span>: An air gapped computer is isolated from insecure networks that interact with the Internet or unsecured local area networks in your home.</span></li><ul><li><a href=\"https://www.wired.com/story/extreme-security-measures/\" target=\"_blank\">Wired - Extreme Security Measures for the Extra Paranoid</a></li><li><a href=\"https://www.howtogeek.com/687792/the-ultimate-defense-what-is-an-air-gapped-computer/\"><span>How-To Geek - The Ultimate Defense: What Is an Air Gapped Computer?</span></a></li></ul><li><strong>Paper:</strong><span> A paper wallet is a piece of printed paper that contains your important key information (in some cases, even a QR code) and is used for facilitating cryptocurrency transactions. Paper is often not recommended because it is susceptible to degradation and could be insecure or lost easily.</span></li><ul><li><a href=\"https://blockgeeks.com/guides/paper-wallet-guide/#Paper_wallets\"><span>Block Geeks - Paper wallets</span></a></li></ul></ul><p><span>It is ultimately your responsibility to research the available cryptocurrency wallet solutions available to you. It is also your responsibility to keep your digital assets safe. With this in mind, please take note of the following recommendations:</span></p><ul><li><strong>Do not use your</strong> <strong>work computer to configure a digital asset storage solution</strong><span>. Your private personal data could be lost or in some way compromised while hosted on a work computer. DFINITY is not responsible for personal data that is compromised or lost for any reason on work devices.</span></li><li><span>Do not leave your cold storage wallet or private information in a public place, where it could be compromised.</span></li><li><span>Do not lose your private key. If lost, you will be permanently unable to access your digital assets.&nbsp;</span></li></ul>"
              }
            ],
            "audio_file": "",
            "ssml": "",
            "delay": 500,
            "reprompt": [],
            "metadata": [
              {
                "item_key": "Default",
                "item_value": "quickreplies"
              }
            ],
            "nextMessagesIds": [],
            "id": "286579c0-10ca-11ec-bb63-b1c8b566508d"
          }
        ]
      }
    }
  },
  "28657a20-10ca-11ec-9d5a-6b2bcaa7e173": {
    "en": {
      "generic": {
        "blocks": [
          {
            "component_type": "button",
            "nodeName": "canister",
            "context": [],
            "text": "Here are some articles that may help:",
            "buttons": [
              {
                "type": "postback",
                "title": "Canister Smart Contracts",
                "payload": "<p><strong>What are canister smart contracts?</strong></p><p>Canister smart contracts are computational units that include both program and state. A software Canister is similar to a container in that both are deployed as a software unit that contains compiled code and dependencies for an application or service.</p><p>Containerization allows for applications to be decoupled from the environment, allowing for easy and reliable deployment. The Canister differs from a container, however, in that it also stores information about the current software state with a record of preceding events and user interactions.</p><p>While a containerized application might include information about the state of the environment in which the application runs, a software Canister is able to persist a record of state changes that resulted from an application’s functions being used.</p><p>This concept of a Canister consisting of both program and state is an important one because when a smart contract function is invoked by sending a message to one of its entry points, there are only two types of calls: non-committing query calls and committing update calls.</p>"
              },
              {
                "type": "postback",
                "title": "How can I delete a Canister smart contract?",
                "payload": "<p>If you want to permanently delete a specific Canister or all Canisters for a specific project on a given Internet Computer network, you can do so by running the dfx canister delete&nbsp;command.</p><p>&nbsp;</p></div><div><p>Deleting a Canister removes the canister identifier, code, and state from the Internet Computer network. Before you can delete a Canister, you must first stop the canister to clear any pending message requests or replies.</p><p>&nbsp;</p></div><div><p>To delete all Canisters for a project running on the local Internet Computer network:</p><p>&nbsp;</p></div><div><ol><li><p>Open a new terminal and navigate to your project directory.</p></li><li><p>Start the Internet Computer network, if necessary.</p><div><p>In most cases, this step is only necessary if you are running the Internet Computer network locally.</p></div><div><p>If you were deleting Canisters on a remote network, you would include the --network&nbsp;command-line option to perform tasks on that network.</p><p>&nbsp;</p></div></li><li><p>Check the status of the project Canisters running on the local Internet Computer network by running the following command:</p><div><div><pre>dfx canister status --all<span>copy</span></pre></div></div></li><li><p>Stop all of the project Canisters by running the following command:</p><div><div><pre>dfx canister stop --all<span>copy</span></pre></div></div></li><li><p>Then delete all of the project Canisters by running the following command:</p><div><div><pre>dfx canister delete --all</pre></div></div></li></ol></div><p>&nbsp;</p><p><span>For more information on Canisters, check out the <a href=\"https://sdk.dfinity.org/docs/developers-guide/working-with-canisters.html#delete-canister\" target=\"_blank\">Developer Center</a>.</span></p>"
              },
              {
                "type": "postback",
                "title": "How can I stop a running Canister smart contract?",
                "payload": "<p>You can stop Canisters that are currently running by running the dfx canister stop command:</p></div><div><div><pre>dfx canister stop --all<span>copy</span></pre></div></div><div><p>&nbsp;</p><p>This command displays output similar to the following:</p></div><div><div><pre>Stopping code for canister status_check, with canister_id 75hes-oqbaa-aaaaa-aaaaa-aaaaa-aaaaa-aaaaa-q Stopping code for canister status_check_assets, with canister_id cxeji-wacaa-aaaaa-aaaaa-aaaaa-aaaaa-aaaaa-q</pre></div></div><p>&nbsp;</p><p><span>To learn more about how to stop a running Canister, please check out the <a href=\"https://sdk.dfinity.org/docs/developers-guide/working-with-canisters.html#stop-status\" target=\"_blank\">“stop status” content</a> from the Developer Center.</span></p>"
              }
            ],
            "audio_file": "",
            "ssml": "",
            "delay": 500,
            "reprompt": [],
            "metadata": [
              {
                "item_key": "Default",
                "item_value": "quickreplies"
              }
            ],
            "nextMessagesIds": [],
            "id": "28657a20-10ca-11ec-9d5a-6b2bcaa7e173"
          }
        ]
      }
    }
  },
  "28657a80-10ca-11ec-b04e-43d83d304011": {
    "en": {
      "generic": {
        "blocks": [
          {
            "component_type": "button",
            "nodeName": "smartcontract",
            "context": [],
            "text": "Here is an article that may help:",
            "buttons": [
              {
                "type": "postback",
                "title": "What are canister smart contracts?",
                "payload": "<p><strong>What are canister smart contracts?</strong></p><p>Canister smart contracts are computational units that include both program and state. A software Canister is similar to a container in that both are deployed as a software unit that contains compiled code and dependencies for an application or service.</p><p>Containerization allows for applications to be decoupled from the environment, allowing for easy and reliable deployment. The Canister differs from a container, however, in that it also stores information about the current software state with a record of preceding events and user interactions.</p><p>While a containerized application might include information about the state of the environment in which the application runs, a software Canister is able to persist a record of state changes that resulted from an application’s functions being used.</p><p>This concept of a Canister consisting of both program and state is an important one because when a smart contract function is invoked by sending a message to one of its entry points, there are only two types of calls: non-committing query calls and committing update calls.</p>"
              }
            ],
            "audio_file": "",
            "ssml": "",
            "delay": 500,
            "reprompt": [],
            "metadata": [
              {
                "item_key": "default",
                "item_value": "quickreplies"
              }
            ],
            "nextMessagesIds": [],
            "id": "28657a80-10ca-11ec-b04e-43d83d304011"
          }
        ]
      }
    }
  },
  "28657ae0-10ca-11ec-85b2-01fe08fa8423": {
    "en": {
      "generic": {
        "blocks": [
          {
            "component_type": "button",
            "nodeName": "canisterstatus",
            "context": [],
            "text": "Here are some articles that may help:",
            "buttons": [
              {
                "type": "postback",
                "title": "How can I check the status of a Canister smart contract?",
                "payload": "<p>You can check the current status of all Canisters or a specified Canister by running the dfx canister status command.</p><p>For example, to see the status for all Canisters running on the local Internet Computer network, you can run the following command:</p></div><div><div><pre>dfx canister status --all<span>copy</span></pre></div></div><div><p>&nbsp;</p><p>This command returns output similar to the following if Canisters are currently running:</p></div><div><div><pre>Canister status_check's status is Running. Canister status_check_assets's status is Running.</pre></div></div><p>&nbsp;</p><p><span>To learn more about checking on the status of a Canister, please check out the <a href=\"https://sdk.dfinity.org/docs/developers-guide/working-with-canisters.html#check-status\" target=\"_blank\">“check status” content</a> from the Developer Center.</span></p>"
              },
              {
                "type": "postback",
                "title": "How can I stop a running Canister smart contract?",
                "payload": "<p>You can stop Canisters that are currently running by running the dfx canister stop command:</p></div><div><div><pre>dfx canister stop --all<span>copy</span></pre></div></div><div><p>&nbsp;</p><p>This command displays output similar to the following:</p></div><div><div><pre>Stopping code for canister status_check, with canister_id 75hes-oqbaa-aaaaa-aaaaa-aaaaa-aaaaa-aaaaa-q Stopping code for canister status_check_assets, with canister_id cxeji-wacaa-aaaaa-aaaaa-aaaaa-aaaaa-aaaaa-q</pre></div></div><p>&nbsp;</p><p><span>To learn more about how to stop a running Canister, please check out the <a href=\"https://sdk.dfinity.org/docs/developers-guide/working-with-canisters.html#stop-status\" target=\"_blank\">“stop status” content</a> from the Developer Center.</span></p>"
              },
              {
                "type": "postback",
                "title": "How can I restart a stopped Canister smart contract?",
                "payload": "<p><span>To restart a Canister smart contract after a successful Canister upgrade—you can run the </span>dfx canister start<span> command.</span></p></div><div><p>For example, to restart all of the canisters running on the local Internet Computer network, you can run the following command:</p></div><div><div><pre>dfx canister start --all<span>copy</span></pre></div></div><div><p>&nbsp;</p><p>This command displays output similar to the following:</p></div><div><div><pre>Starting code for canister status_check, with canister_id 75hes-oqbaa-aaaaa-aaaaa-aaaaa-aaaaa-aaaaa-q Starting code for canister status_check_assets, with canister_id cxeji-wacaa-aaaaa-aaaaa-aaaaa-aaaaa-aaaaa-q</pre></div></div><p>&nbsp;</p><p><span>For more information on how to restart a Canister, please check out the <a href=\"https://sdk.dfinity.org/docs/developers-guide/working-with-canisters.html#restart-status\" target=\"_blank\">“restart status” content</a> from the Developer Center.</span></p>"
              }
            ],
            "audio_file": "",
            "ssml": "",
            "delay": 500,
            "reprompt": [],
            "metadata": [
              {
                "item_key": "Default",
                "item_value": "quickreplies"
              }
            ],
            "nextMessagesIds": [],
            "id": "28657ae0-10ca-11ec-85b2-01fe08fa8423"
          }
        ]
      }
    }
  },
  "28657b40-10ca-11ec-b5dd-270238fefe31": {
    "en": {
      "generic": {
        "blocks": [
          {
            "component_type": "button",
            "nodeName": "cycles",
            "context": [],
            "text": "Here are some articles that may help:",
            "buttons": [
              {
                "type": "postback",
                "title": "What is the Cycles Faucet? How can I access $20 worth of free cycles?",
                "payload": "<p><span>The DFINITY Foundation launched the Cycles Faucet in partnership with Fleek as a way to supercharge development on the Internet Computer and support our growing developer ecosystem. Qualified developers can access $20 worth of free cycles to begin deploying Canister smart contracts to the network.<br><br>The Cycles Faucet allows developers to skip conversion and deploy Canisters in a few easy steps.<br><br>Upon accessing the <a href=\"https://faucet.dfinity.org/auth\" target=\"_blank\">Cycles Faucet</a>, you will be able to select one of two options for managing your cycles (you will be prompted to input your principal identifier):<br><br>1. A cycles wallet, or<br>2. <a href=\"https://docs.dank.ooo/\" target=\"_blank\">Dank</a>, a new service offered by Fleek.<br><br>A cycles wallet is a special type of Canister for managing the distribution and ownership of cycles. When using the <a href=\"https://dfinity.org/developers/\" target=\"_blank\">DFINITY Canister SDK</a> locally, a cycles wallet is created for you as part of the default dfx project, and most of the operations performed using the cycles wallet happen automatically. In order to deploy apps to production on the Internet Computer, you'll need to first create a Canister and deploy a new cycles wallet to it. When selecting this option in the Cycles Faucet, this is all done for you. The principal identifier provided will be assigned as the controller of your new wallet Canister, enabling you to deploy Canisters using your cycles balance.<br><br>With Dank, you'll be offered the necessary Canister and cycle management infrastructure in the background so that you won't need to deploy your own cycles wallet. Dank can even automatically keep your cycle balance topped up.<br><br>For more information and resources, please join <a href=\"https://discord.com/invite/yVEcEzmrgm\" target=\"_blank\">Fleek's Discord</a> and <a href=\"https://discord.com/invite/yVEcEzmrgm\" target=\"_blank\">Dank's community on Discord</a>, and check out our <a href=\"https://forum.dfinity.org/\" target=\"_blank\">Developer Community</a>.</span></p>"
              },
              {
                "type": "postback",
                "title": "What are cycles?",
                "payload": "<p><strong>What are cycles?</strong></p><p>Cycles act as the computational resource to execute actions on the Internet Computer. In general, all <a title=\"Canisters\" href=\"https://dfinity.org/faq/canisters\" target=\"_blank\">Canister smart contracts</a>&nbsp;consume resources in the form of CPU cycles for execution, bandwidth for routing messages, and memory for persisted data. Canisters maintain an account balance to pay for the cost of communication, computation, and the storage consumed by their applications. The cost of computation is expressed in units of cycles.</p><p>Cycles reflect the real costs of operations, including resources such physical hardware, rack space, energy, storage devices, and bandwidth. In simple terms, a cycle unit represents the cost of executing a single WebAssembly instruction. Programs must be able to pay for complete execution (all or nothing), but the cost associated with cycles will make efficient programs cost-effective.</p><p>By setting limits on how many cycles a Canister can consume, the platform can prevent malicious code from draining resources. The relative stability of operational costs also makes it easier to predict the cycles that are required to process a million messages.</p><p>Cycles can be compared to “gas” for Ethereum and “credits” for AWS, but have much farther reaching uses with regard to data, compute, and execution. Their design also inherently accounts for technological pitfalls, such as rapidly rising costs of usage.</p>"
              }
            ],
            "audio_file": "",
            "ssml": "",
            "delay": 500,
            "reprompt": [],
            "metadata": [
              {
                "item_key": "Default",
                "item_value": "quickreplies"
              }
            ],
            "nextMessagesIds": [],
            "id": "28657b40-10ca-11ec-b5dd-270238fefe31"
          }
        ]
      }
    }
  },
  "28657ba0-10ca-11ec-956f-dde17b099134": {
    "en": {
      "generic": {
        "blocks": [
          {
            "component_type": "button",
            "nodeName": "neuron",
            "context": [],
            "text": "Here are some articles that may help:",
            "buttons": [
              {
                "type": "postback",
                "title": "How can I create a voting neuron?",
                "payload": "<p><span>You can create neurons by “locking up” your ICP utility tokens for a designated period of time, enabling you to engage in governance by voting on proposals in exchange for ICP utility token rewards.</span></p><p><span>For detailed instructions on how to create a voting neuron, please refer to our “</span><a href=\"https://sdk.dfinity.org/docs/token-holders/nns-app-quickstart.html\" target=\"_blank\">Network Nervous System Application Quick Start</a><span>” article.</span></p>"
              },
              {
                "type": "postback",
                "title": "What is a neuron?",
                "payload": "<p><strong>What is a neuron?</strong></p><p>Neurons allow users to “time-lock” their ICP utility tokens in order to be rewarded with voting power, which can be used to vote on proposals submitted to the system that can be automatically executed. Neurons can be made to follow each other in various ways such that they vote automatically, representing a form of&nbsp;<a title=\"liquid democracy\" href=\"https://en.wikipedia.org/wiki/Liquid_democracy\" target=\"_blank\">liquid democracy</a>. Users can also dissolve their neurons to release the tokens inside the neuron and convert them into&nbsp;<a title=\"Cycles\" href=\"https://dfinity.org/faq/cycles\" target=\"_blank\">cycles</a>&nbsp;to power computation.</p>"
              },
              {
                "type": "postback",
                "title": "Can I add more ICP utility tokens to an existing neuron?",
                "payload": "<p><span>If you want to add ICP utility tokens to an existing neuron, all you have to do is send ICP utility tokens to the same address where the original “Stake Neuron” transaction was directed, and the neuron’s balance will be refreshed automatically.</span></p><p><span>Please refer to this </span><a href=\"https://forum.dfinity.org/t/guide-how-to-top-up-an-existing-neuron/4721\" target=\"_blank\">forum guide</a><span> for more information.</span></p>"
              }
            ],
            "audio_file": "",
            "ssml": "",
            "delay": 500,
            "reprompt": [],
            "metadata": [
              {
                "item_key": "Default",
                "item_value": "quickreplies"
              }
            ],
            "nextMessagesIds": [],
            "id": "28657ba0-10ca-11ec-956f-dde17b099134"
          }
        ]
      }
    }
  },
  "28657bf0-10ca-11ec-9fe5-15258d97cfc4": {
    "en": {
      "generic": {
        "blocks": [
          {
            "component_type": "button",
            "nodeName": "networknervoussystem",
            "context": [],
            "text": "Here are some articles that may help:",
            "buttons": [
              {
                "type": "postback",
                "title": "What is the Network Nervous System?",
                "payload": "<p><strong>What is the Network Nervous System?</strong></p><p>The NNS is the autonomous software that governs the Internet Computer and manages everything from economics to network structure. The NNS is hosted within the network itself, and is part of the system of protocols that securely weaves together the compute capacity of node machines to create the Internet Computer blockchain network, allowing the network to be autonomous and adaptive. The NNS acts as an autonomous “master” blockchain with a public key to validate all ICP transactions.</p><p>The NNS will put proposals to a vote, such as whether to expand the network by adding subnets or onboarding new node machines, which are then voted upon by holders of ICP utility tokens who have locked up their tokens.</p><p>The NNS also combines nodes from independent data centers to create subnets, which are used to host <a title=\"Canisters\" href=\"https://dfinity.org/faq/canisters\" target=\"_blank\">Canister smart contracts</a>. The NNS continues to create <a href=\"https://dfinity.org/faq/subnet\" target=\"_blank\">subnets</a> based on the capacity demands of hosting Canisters and the ability to connect to other subnets and allowing the Internet Computer to scale indefinitely.</p>"
              },
              {
                "type": "postback",
                "title": "I can’t log back into my NNS apps, what should I do?",
                "payload": "<p><span>This may be a simple issue that the DFINITY Support Team can help with. Please let us know by <a href=\"https://support.dfinity.org/hc/en-us/requests/new\" target=\"_blank\">submitting a ticket</a>.</span></p>"
              }
            ],
            "audio_file": "",
            "ssml": "{\"value\":\"<p><span>This may be a simple issue that the DFINITY Support Team can help with. Please let us know by <a href=\\\"https://support.dfinity.org/hc/en-us/requests/new\\\" target=\\\"_blank\\\">submitting a ticket</a>.</span></p>\",\"mentions\":[],\"cleanVal\":\"<p><span>This may be a simple issue that the DFINITY Support Team can help with. Please let us know by <a href=\\\"https://support.dfinity.org/hc/en-us/requests/new\\\" target=\\\"_blank\\\">submitting a ticket</a>.</span></p>\"}",
            "delay": 500,
            "reprompt": [],
            "metadata": [
              {
                "item_key": "Default",
                "item_value": "quickreplies"
              }
            ],
            "nextMessagesIds": [],
            "id": "28657bf0-10ca-11ec-9fe5-15258d97cfc4"
          }
        ]
      }
    }
  },
  "28657c50-10ca-11ec-80f2-53dfa892920e": {
    "en": {
      "generic": {
        "blocks": [
          {
            "component_type": "button",
            "nodeName": "token",
            "context": [],
            "text": "Here are some articles that may help",
            "buttons": [
              {
                "type": "postback",
                "title": "What is an ICP utility token?",
                "payload": "<p>The ICP utility token (formerly known as “DFN”) is the primary mechanism that allows the broader internet community to participate in the governance of the Internet Computer network. ICP can also be dissolved and converted into&nbsp;<a title=\"Cycles\" href=\"https://dfinity.org/faq/cycles\" target=\"_blank\">cycles</a>, which are then used to run websites and applications as well as power computations on the Internet Computer via <a title=\"Canisters\" href=\"https://dfinity.org/faq/canisters\" target=\"_blank\">Canister smart contracts.</a></p>"
              },
              {
                "type": "postback",
                "title": "What does token custody mean?",
                "payload": "<p><span>Token custody is the storage of your assets and how you store the key to access your tokens. There are two options to custody your tokens:</span></p><ol><li><a href=\"https://support.dfinity.org/hc/en-us/articles/360057133012-What-is-self-custody-\" target=\"_blank\">Self-Custody</a></li><li><a href=\"https://support.dfinity.org/hc/en-us/articles/360057606151-What-are-custody-service-solutions-\" target=\"_blank\"><span>Custody Service Solutions</span></a></li></ol>"
              }
            ],
            "audio_file": "",
            "ssml": "",
            "delay": 500,
            "reprompt": [],
            "metadata": [
              {
                "item_key": "Default",
                "item_value": "quickreplies"
              }
            ],
            "nextMessagesIds": [],
            "id": "28657c50-10ca-11ec-80f2-53dfa892920e"
          }
        ]
      }
    }
  },
  "28657cb0-10ca-11ec-9167-81c40ff42cd1": {
    "en": {
      "generic": {
        "blocks": [
          {
            "component_type": "text",
            "nodeName": "GladToHelp",
            "context": [],
            "text": "That's great!  Glad we could help.",
            "audio_file": "",
            "ssml": "",
            "delay": 500,
            "reprompt": [],
            "metadata": [
              {
                "item_key": "Default",
                "item_value": "JumpBlock1"
              }
            ],
            "end_conversation": false,
            "buttons": [],
            "id": "28657cb0-10ca-11ec-9167-81c40ff42cd1"
          }
        ]
      }
    }
  },
  "28657d10-10ca-11ec-b9fa-d7a60f78f48d": {
    "en": {
      "generic": {
        "blocks": [
          {
            "component_type": "text",
            "nodeName": "SorryToHear",
            "context": [],
            "text": "Sorry to hear that.  We will try to sort this out.",
            "audio_file": "",
            "ssml": "",
            "delay": 500,
            "reprompt": [],
            "metadata": [
              {
                "item_key": "Default",
                "item_value": "JumpBlock1"
              }
            ],
            "end_conversation": false,
            "buttons": [],
            "id": "28657d10-10ca-11ec-b9fa-d7a60f78f48d"
          }
        ]
      }
    }
  },
  "7be8492e-f975-4e4b-a03b-d3f3ef994d76": {
    "en": {
      "generic": {
        "blocks": [
          {
            "component_type": "text",
            "nodeName": "WrongInputBlock",
            "context": [],
            "text": "I didn't get that. Can you say it again?",
            "audio_file": "",
            "ssml": "",
            "delay": 500,
            "reprompt": [],
            "metadata": [],
            "end_conversation": false,
            "buttons": [],
            "alternate_replies": [
              "I missed what you said. What was that?",
              "Sorry, could you say that again?",
              "Sorry, can you say that again?",
              "Can you say that again?",
              "Sorry, I didn't get that. Can you rephrase?",
              "Sorry, what was that?",
              "One more time?",
              "What was that?",
              "I didn't get that. Can you say it again?",
              "I didn't get that. Can you repeat?",
              "I missed that, say that again?"
            ],
            "id": "7be8492e-f975-4e4b-a03b-d3f3ef994d76"
          }
        ]
      }
    }
  }
}
